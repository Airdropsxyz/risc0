name: S3 Cache Install
description: Install cargo cache in S3 Bucket `risc0-ci-cache/public`
inputs:
  key:
    required: true
    default: rust-cache-${{ runner.os }}-${{ runner.arch }}

runs:
  using: composite
  steps:
    - if: runner.os == 'Linux' && runner.arch == 'X64'
      run: |
        CACHE_ARCH="x86_64-unknown-linux-musl"
      shell: bash

    - if: runner.os == 'macOS' && runner.arch == 'X64'
      run: |
        CACHE_ARCH="x86_64-apple-darwin"
      shell: bash

    - if: runner.os == 'macOS' && runner.arch == 'ARM64'
      run: |
        CACHE_ARCH="aarch64-apple-darwin"
      shell: bash

    - if: runner.os == 'Linux' &&  runner.arch == 'ARM64'
      run: |
        CACHE_ARCH="aarch64-unknown-linux-musl"
      shell: bash

    - name: Configure AWS Credentials
      id: aws-creds
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: 'us-west-2'
        role-to-assume: arn:aws:iam::083632199359:role/gha_oidc_risc0_cache_public_access
        output-credentials: true

    - name: Set Up CI Cache
      uses: risc0/actions-cache@v1
      with:
        path: |
          target/
          ~/.cache/risc0
          ~/.cargo/
        key: public/risc0-rust-cache-$CACHE_ARCH-${{ hashFiles('Cargo.lock') }}
        bucket: risc0-ci-cache
        accessKey: ${{ steps.ci-creds.outputs.aws-access-key-id }}
        secretKey: ${{ steps.ci-creds.outputs.aws-secret-access-key }}
        sessionToken: ${{ steps.ci-creds.outputs.aws-session-token }}
        use-fallback: false
        restore-keys: |
          public/risc0-rust-cache-$CACHE_ARCH-

    - run: rm -f $HOME/.cargo/config
      shell: bash
